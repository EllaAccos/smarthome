{"version":3,"sources":["components/RoomButtons.js","components/HomePage.js","components/NewRoom.js","components/AddDevice.js","components/RoomDescription.js","App.js","reportWebVitals.js","index.js"],"names":["RoomButtons","props","room","map","e","index","to","pathOfRoom","id","onClick","goToRoom","style","backgroundColor","color","nameOfRoom","HomePage","roomPathFunc","roomPath","roomButtonIndex","setRoomButtonIndex","NewRoom","selectedValue","document","getElementById","value","setRoomKind","onChange","roomNameLength","placeholder","v","setRoomColor","target","path","create","AddDevice","saveValue","stereo","roominx","products","filter","item","length","alert","kind","setDevice","push","deviceOnOff","console","log","device","setAddDevice","RoomDescription","useState","addDevice","setRoominx","flag","setFlag","roomI","roomIndex1","className","i","setRoom","App","roomName","setRoomName","roomColor","roomKind","setPath","roomIndex","setRoomIndex","setRoomIndex1","addOne","num","temp","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.a8928abe.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport roomButtons from './roomButtons.css'\r\n\r\nexport default function RoomButtons(props) {\r\n    return (\r\n        <div>\r\n            {props.room.map((e,index)=>{\r\n                return <Link to={e.pathOfRoom}><button id=\"roomB\" onClick={()=>props.goToRoom(index)} style={{backgroundColor:e.color}}><h1>{e.nameOfRoom}</h1></button></Link>\r\n                })}\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport RoomButtons from './RoomButtons'\r\nimport homePage from './homePage.css'\r\n\r\nexport default function HomePage(props) {\r\n    \r\n    return (\r\n        <div>\r\n            <div>\r\n                <RoomButtons room={props.room} roomPathFunc={props.roomPathFunc} roomPath={props.roomPath} roomButtonIndex={props.roomButtonIndex} setRoomButtonIndex={props.setRoomButtonIndex} goToRoom={props.goToRoom}/>\r\n            </div>\r\n            <div>\r\n                <Link to='/NewRoom'><button id=\"plus\">+</button></Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport newRoom from './newRoom.css'\r\n\r\nexport default function NewRoom(props) {\r\n    \r\n    //set the room`s kind in the app hook\r\n    const roomKind = () =>{\r\n        const element = document.getElementById(\"kind\")\r\n        const selectedValue = element.value\r\n        props.setRoomKind(selectedValue)\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <select onClick={roomKind} id=\"kind\">\r\n                <option value=\"null\">-</option>\r\n                <option value=\"bath\">bath</option>\r\n                <option value=\"bedroom\">bedroom</option>\r\n                <option value=\"kitchen\">kitchen</option>\r\n            </select>\r\n            <br></br>\r\n            <input onChange={props.roomNameLength} placeholder=\"room's name\"/>\r\n            <br></br>\r\n            <input onChange={(v)=>(props.setRoomColor(v.target.value))} placeholder=\"room's color\"/>\r\n            <br></br>\r\n            <Link to={props.path}><button id=\"createB\" onClick={props.create}>CREATE</button></Link>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState} from 'react'\r\n\r\n\r\nexport default function AddDevice(props) {\r\n\r\n    //call the function saveValue and hide the component AddDevice\r\n    const add = () => {\r\n        props.setAddDevice(false)\r\n        saveValue()\r\n\r\n    }\r\n\r\n    //Save the device from the select option and push it to the main object in the room array\r\n    \r\n    const saveValue = () => {\r\n        const element = document.getElementById(\"kind\")\r\n        const selectedValue = element.value\r\n        let light = \"red\"\r\n        const stereo = props.room[props.roominx].products.filter((item)=> item == \"stereo system\")\r\n\r\n        if(props.room[props.roominx].products.length>4){\r\n            alert(\"error: max 5 products\")\r\n        }\r\n        \r\n        else if(props.room[props.roominx].kind != \"bath\" && selectedValue == \"Water Heater\"){\r\n            alert(\"error: water heater can be just in the bathroom\")\r\n        }\r\n\r\n        else if(stereo.length == 1 && selectedValue == \"stereo system\"){\r\n            alert(\"error: can`t have more then one stereo system in the room\")\r\n        }\r\n        else{\r\n        props.setDevice([props.room[props.roominx].products.push(selectedValue)])\r\n        props.setDevice([props.room[props.roominx].deviceOnOff.push(light)])}\r\n        console.log(props.device);\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <select id=\"kind\">\r\n                <option value=\"Air-Conditioner\">Air-Conditioner</option>\r\n                <option value=\"Water Heater\">Water Heater</option>\r\n                <option value=\"stereo system\">stereo system</option>\r\n                <option value=\"lamp\">lamp</option>\r\n            </select>\r\n            <br></br>\r\n            <button onClick={add}>add</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddDevice from './AddDevice'\r\nimport roomDescription from './roomDescription.css'\r\n\r\nexport default function RoomDescription(props) {\r\n\r\n    const [addDevice,setAddDevice] = useState(false)\r\n    const [roominx,setRoominx] = useState(0)\r\n    const [flag,setFlag] = useState(true)\r\n\r\n    //turn the buttons on and off (red and green)\r\n    const turnOnOff = (i) => {\r\n        if(props.room[props.roomIndex1].deviceOnOff[i]==\"red\"){\r\n            props.room[props.roomIndex1].deviceOnOff[i]=\"green\"\r\n            console.log(props.room[props.roomIndex1].products[i]);\r\n        }\r\n        else if(props.room[props.roomIndex1].deviceOnOff[i]=\"green\"){\r\n            props.room[props.roomIndex1].deviceOnOff[i]=\"red\"\r\n            console.log(props.room[props.roomIndex1].products[i]);\r\n        }\r\n        setFlag(!flag)\r\n\r\n    }\r\n\r\n    //show the component AddDevice\r\n    const showAddDevice = () => {\r\n        setAddDevice(true)\r\n        roomI()\r\n    }\r\n\r\n\r\n    //func set the index of the room\r\n    const roomI = () =>{setRoominx(props.room[props.roomIndex1].index)}\r\n\r\n    return (\r\n        <div>\r\n            <h2>Room Name: {props.room[props.roomIndex1].nameOfRoom}</h2>\r\n            <h2>Room Kind: {props.room[props.roomIndex1].kind}</h2>\r\n            {props.room[props.roomIndex1].products.map((e,index)=>{\r\n            return <button className=\"device\" id={index} onClick={()=>turnOnOff(index)} style={{backgroundColor:props.room[props.roomIndex1].deviceOnOff[index]}}>{e}</button>\r\n            })}\r\n            <br></br>\r\n            <button id=\"addDevice\" onClick={showAddDevice}>add device</button>\r\n            {\r\n                addDevice?<AddDevice roominx={roominx} setAddDevice={setAddDevice}  setDevice={props.setDevice} device={props.device} room={props.room} setRoom={props.setRoom}/>:null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport React,{useState} from 'react'\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\nimport HomePage from './components/HomePage';\nimport NewRoom from './components/NewRoom';\nimport RoomButtons from './components/RoomButtons';\nimport RoomDescription from './components/RoomDescription';\nimport AddDevice from './components/AddDevice';\n\n\nfunction App() {\n\n //hooks\n  const [roomName,setRoomName]=useState(\"\")\n  const [roomColor,setRoomColor]=useState(\"\")\n  const [roomKind,setRoomKind] = useState(\"\")\n  const [path,setPath] = useState('#')\n  const [room,setRoom] = useState([])\n  const [roomPath,setRoomPath] = useState([])\n  const [device,setDevice] = useState([])\n  const [roomIndex,setRoomIndex] = useState(0)\n  const [roomIndex1,setRoomIndex1] = useState(0)\n\n\n\n\n//check the input and set the name in the roomName hook\n  const roomNameLength = (e) => {\n    setRoomName(e.target.value)\n    setPath('/')\n\n  }\n\n//create button in the newRoom component\n//check the length of the roomname and set the list of object for the room\n//also set every key in the hook to \"\" if roomName>5 || <1 \n  const create = () => {\n    if(roomName.length>5 || roomName.length <1){\n      setPath('/')\n      alert('error')\n      setRoomName(\"\")\n      setRoomColor(\"\")\n      setRoomKind(\"\")\n    }\n    else{\n      addOne(roomIndex)\n      setRoom([...room,{kind:roomKind,nameOfRoom:roomName,color:roomColor,index:roomIndex,pathOfRoom:\"/room\"+roomName,products:[],deviceOnOff:[]}])\n      setRoomName(\"\")\n      setRoomColor(\"\")\n      setRoomKind(\"\")\n    }\n  }\n\n  //set roomIndex1 in RoomButtons component onClick\n  const goToRoom = (index) => {\n    setRoomIndex1(index)\n    console.log(roomIndex1);\n  }\n\n  //add 1 to roomIndex\n  const addOne = (num) => {\n    let temp = num\n    temp++\n    setRoomIndex(temp)\n  }\n\n  return (\n    <div className=\"App\">\n      <h1 id=\"smartTitle\">Smart House</h1>\n      <Router>\n        <Switch>\n          <Route exact path='/' >\n            <HomePage room={room} roomPath={roomPath} goToRoom={goToRoom} roomIndex1={roomIndex1}/>\n          </Route>\n\n          <Route exact path=\"/\">\n            <RoomButtons />\n          </Route>\n\n          <Route exact path='/NewRoom'>\n            <NewRoom roomName={roomName} roomKind={roomKind} setRoomKind={setRoomKind} roomNameLength={roomNameLength} create={create} path={path} setRoomColor={setRoomColor}/>\n          </Route>\n\n          <Route exact path={room.path}>\n            <RoomDescription room={room} setRoom={setRoom} device={device} setDevice={setDevice} goToRoom={goToRoom} roomIndex1={roomIndex1}/>\n          </Route>\n\n          <Route exact path={room.path}>\n            <AddDevice/>\n          </Route>\n\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}